name: docker

on: [push, workflow_dispatch]

jobs:
  buildx-glibc:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: 
        version: ["22-jdk-glibc", "22-jre-glibc", "21-jdk-glibc", "21-jre-glibc", "20-jdk-glibc", "20-jre-glibc", "19-jdk-glibc", "19-jre-glibc", "18-jdk-glibc", "18-jre-glibc", "17-jdk-glibc", "17-jre-glibc", "16-jdk-glibc", "16-jre-glibc", "11-jdk-glibc", "11-jre-glibc", "8-jdk-glibc", "8-jre-glibc"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Install yq (mikefarah, go)
        run: sudo su -c 'wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq'
      -
        name: Run Buildx (${{ matrix.version }}-glibc)
        run: |
          docker buildx build \
            --platform $(yq '.${{ matrix.version }}.arch' platform-matrix.yml) \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            --build-arg ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.amd64) \
            --build-arg ORG=$(yq r platform-matrix.yml ${{ matrix.version }}.org) \
            --build-arg REPO=$(yq r platform-matrix.yml ${{ matrix.version }}.repo) \
            --build-arg TYPE=$(yq r platform-matrix.yml ${{ matrix.version }}.type) \
            --build-arg TAG=$(yq r platform-matrix.yml ${{ matrix.version }}.tag) \
            --build-arg VERSION=$(yq r platform-matrix.yml ${{ matrix.version }}.version) \
            -f Dockerfile.glibc -t jcxldn/openjdk-alpine:${{ matrix.version }} .
  buildx-musl:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: 
        version: ["22-jdk-musl", "22-jre-musl", "21-jdk-musl", "21-jre-musl"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Install yq (mikefarah, go)
        run: sudo su -c 'wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq'
      -
        name: Run Buildx (${{ matrix.version }}-glibc)
        run: |
          docker buildx build \
            --platform $(yq '.${{ matrix.version }}.arch' platform-matrix.yml) \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            --build-arg ARM64_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.arm64) \
            --build-arg ARMV7_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.armv7) \
            --build-arg PPC64LE_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.ppc64le) \
            --build-arg S390X_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.s390x) \
            --build-arg AMD64_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.amd64) \
            --build-arg ORG=$(yq r platform-matrix.yml ${{ matrix.version }}.org) \
            --build-arg REPO=$(yq r platform-matrix.yml ${{ matrix.version }}.repo) \
            --build-arg TYPE=$(yq r platform-matrix.yml ${{ matrix.version }}.type) \
            --build-arg TAG=$(yq r platform-matrix.yml ${{ matrix.version }}.tag) \
            --build-arg VERSION=$(yq r platform-matrix.yml ${{ matrix.version }}.version) \
            --build-arg JDK78FIX=$(yq r platform-matrix.yml ${{ matrix.version }}.jdk78fix) \
            --build-arg NEEDSJLINK=$(yq r platform-matrix.yml ${{ matrix.version }}.needs-jlink) \
            -f Dockerfile.musl -t jcxldn/openjdk-alpine:${{ matrix.version }} .
